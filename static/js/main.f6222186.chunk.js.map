{"version":3,"sources":["components/Header/Header.js","components/AddForm/AddForm.js","components/ListTodos/ListTodos.js","components/Footer/Footer.js","App.js","index.js"],"names":["Header","className","AddForm","state","newTodoValue","errorAddNewTodo","writeNewTodo","e","setState","target","value","length","submitTodo","validation","props","preventDefault","this","todos","selectAllTodo","selectAll","onSubmit","type","onClick","placeholder","onChange","React","Component","ListTodos","editingId","editValue","errorAddNewValue","editingValue","id","changeTodoValue","saveOrCancel","key","list","changeStatusComplete","destroyTodo","map","todo","classValue","completed","onDoubleClick","checked","htmlFor","onKeyDown","Footer","activeList","changePage","clearCompletedTodo","filter","views","href","PureComponent","App","activeTodo","completedTodo","currentId","firstStart","addTodo","newTodo","localStorage","setItem","JSON","stringify","choosePage","todoId","clear","forEach","i","filterTodos","destroyedTodo","removeItem","lastItem","newCurrentId","changeTo","clearCompleted","newValue","valueOfLocalStorage","user","localTodo","parse","getItem","push","currentTodos","nextId","startItem","errorIncorrectlyInput","visibleList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f6222186.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => (\n  <header className=\"header\">\n    <h1>todos</h1>\n  </header>\n);\n\nexport default Header;\n","import React from 'react';\nimport PropTypes, { object } from 'prop-types';\n\nclass AddForm extends React.Component {\n  state = {\n    newTodoValue: '',\n    errorAddNewTodo: false,\n  }\n\n  writeNewTodo = (e) => {\n    const { errorAddNewTodo, newTodoValue } = this.state;\n\n    this.setState({ newTodoValue: e.target.value });\n\n    if (newTodoValue.length >= 2 && errorAddNewTodo) {\n      this.setState({ errorAddNewTodo: false });\n    }\n  }\n\n  submitTodo = (e) => {\n    const { validation } = this.props;\n    const { newTodoValue } = this.state;\n\n    e.preventDefault();\n    validation(newTodoValue);\n\n    if (newTodoValue.length >= 3) {\n      this.setState(() => ({\n        newTodoValue: '',\n      }));\n    } else {\n      this.setState({ errorAddNewTodo: true });\n    }\n  }\n\n  render() {\n    const { newTodoValue, errorAddNewTodo } = this.state;\n    const { todos, selectAllTodo, selectAll } = this.props;\n\n    return (\n      <>\n        <form\n          onSubmit={this.submitTodo}\n          className=\"formAddTodo\"\n        >\n          {todos.length >= 1\n            && (\n              <button\n                type=\"button\"\n                className={selectAll\n                  ? 'buttonSelectAll act'\n                  : 'buttonSelectAll dis'}\n                onClick={() => selectAllTodo()}\n              >\n                ‚ùØ\n              </button>\n            )\n          }\n          <input\n            className={errorAddNewTodo\n              ? 'new-todo new-todo__error'\n              : 'new-todo'}\n            placeholder=\"What needs to be done?\"\n            value={newTodoValue}\n            onChange={this.writeNewTodo}\n          />\n        </form>\n      </>\n    );\n  }\n}\n\nAddForm.propTypes = {\n  validation: PropTypes.func.isRequired,\n  todos: PropTypes.arrayOf(object).isRequired,\n  selectAllTodo: PropTypes.func.isRequired,\n  selectAll: PropTypes.bool.isRequired,\n};\n\nexport default AddForm;\n","import React from 'react';\nimport PropTypes, { object } from 'prop-types';\n\nclass ListTodos extends React.Component {\n  state = {\n    editingId: '',\n    editValue: '',\n    errorAddNewValue: false,\n  }\n\n  editingValue = (id, value) => {\n    this.setState(() => ({\n      editingId: id, editValue: value,\n    }));\n  }\n\n  changeTodoValue = (e) => {\n    this.setState({ editValue: e.target.value });\n  }\n\n  saveOrCancel = (e) => {\n    const { changeTodoValue } = this.props;\n    const { editingId, editValue } = this.state;\n\n    if (editValue.length >= 3) {\n      this.setState(({ errorAddNewValue: false }));\n    }\n\n    if (e.key === 'Enter' && editValue.length >= 3) {\n      changeTodoValue(editingId, editValue);\n      this.setState(() => ({\n        editingId: '',\n        editValue: '',\n      }));\n    } else if (e.key === 'Enter' && editValue.length < 3) {\n      this.setState(({ errorAddNewValue: true }));\n    }\n\n    if (e.key === 'Escape') {\n      this.setState(({\n        editingId: '',\n        editValue: '',\n        errorAddNewValue: false,\n      }));\n    }\n  }\n\n  render() {\n    const { list, changeStatusComplete, destroyTodo } = this.props;\n    const { editingId, editValue, errorAddNewValue } = this.state;\n\n    return (\n      <ul className=\"todo-list\">\n        {list.map((todo) => {\n          let classValue;\n\n          if (editingId === todo.id) {\n            classValue = 'editing';\n          } else if (todo.completed) {\n            classValue = 'completed';\n          } else {\n            classValue = '';\n          }\n\n          return (\n            <li\n              onDoubleClick={() => this.editingValue(todo.id, todo.value)}\n              className={classValue}\n            >\n              <div className=\"view\" key={todo.id}>\n                <input\n                  type=\"checkbox\"\n                  className=\"toggle\"\n                  id={`todo-${todo.id}`}\n                  checked={todo.completed}\n                  onChange={() => changeStatusComplete(todo.id)}\n                />\n                <label htmlFor={`todo-${todo.id}`}>{todo.value}</label>\n                <button\n                  type=\"button\"\n                  className=\"destroy\"\n                  onClick={() => destroyTodo(todo.id)}\n                />\n              </div>\n              <input\n                type=\"text\"\n                className={errorAddNewValue ? 'edit new-todo__error' : 'edit'}\n                value={editValue}\n                onChange={this.changeTodoValue}\n                onKeyDown={this.saveOrCancel}\n              />\n            </li>\n          );\n        })}\n      </ul>\n    );\n  }\n}\n\nListTodos.propTypes = {\n  changeTodoValue: PropTypes.func.isRequired,\n  list: PropTypes.arrayOf(object).isRequired,\n  changeStatusComplete: PropTypes.func.isRequired,\n  destroyTodo: PropTypes.func.isRequired,\n};\n\nexport default ListTodos;\n","import React from 'react';\nimport PropTypes, { object } from 'prop-types';\n\nclass Footer extends React.PureComponent {\n  render() {\n    const { todos, activeList, changePage, clearCompletedTodo } = this.props;\n    const pageViews = ['all', 'active', 'completed'];\n\n    return (\n      <footer className=\"footer\">\n        <span className=\"todo-count\">\n          {todos.filter(todo => !todo.completed).length}\n          {' '}\n          items left\n        </span>\n\n        <ul className=\"filters\">\n          {pageViews.map(views => (\n            <li>\n              <a\n                href={`#/${views}`}\n                className={activeList === views ? 'selected' : ''}\n                onClick={() => changePage(views)}\n              >\n                {views}\n              </a>\n            </li>\n          ))}\n        </ul>\n\n        <button\n          type=\"button\"\n          className=\"clear-completed\"\n          onClick={() => clearCompletedTodo()}\n        >\n          Clear completed\n        </button>\n      </footer>\n    );\n  }\n}\n\nFooter.propTypes = {\n  todos: PropTypes.arrayOf(object).isRequired,\n  activeList: PropTypes.string.isRequired,\n  changePage: PropTypes.func.isRequired,\n  clearCompletedTodo: PropTypes.func.isRequired,\n};\n\nexport default Footer;\n","import React from 'react';\n\nimport Header from './components/Header/Header';\nimport AddForm from './components/AddForm/AddForm';\nimport ListTodos from './components/ListTodos/ListTodos';\nimport Footer from './components/Footer/Footer';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    activeTodo: [],\n    completedTodo: [],\n    activeList: 'all',\n    currentId: 1,\n    selectAll: false,\n    firstStart: true,\n  }\n\n  componentDidMount() {\n    localStorage.setItem(`${0}`, JSON.stringify({ startItem: 'startItem' }));\n  }\n\n  validation = (newTodoValue) => {\n    if (newTodoValue.length >= 3) {\n      this.addTodo(newTodoValue);\n    }\n  }\n\n  addTodo = (newTodoValue) => {\n    const { currentId } = this.state;\n    const newTodo = {};\n\n    newTodo.value = newTodoValue;\n    newTodo.id = currentId;\n    newTodo.completed = false;\n    localStorage.setItem(`${currentId}`, JSON.stringify({ ...newTodo }));\n\n    this.setState(state => ({\n      todos: [...state.todos, newTodo],\n      activeTodo: [...state.activeTodo, newTodo],\n      currentId: state.currentId + 1,\n      selectAll: false,\n    }));\n  }\n\n  choosePage = (list) => {\n    const { todos, activeTodo, completedTodo } = this.state;\n\n    switch (list) {\n      case 'all':\n        return todos;\n\n      case 'active':\n        return activeTodo;\n\n      case 'completed':\n        return completedTodo;\n\n      default:\n        return todos;\n    }\n  }\n\n  changeStatusComplete = (todoId) => {\n    this.setState(state => ({\n      todos: state.todos.map(todo => ({\n        ...todo,\n        completed: todo.id === todoId\n          ? !todo.completed\n          : todo.completed,\n      })),\n    }), () => {\n      localStorage.clear();\n      this.state.todos.forEach((todo, i) => (\n        localStorage.setItem(`${i + 1}`, JSON.stringify({ ...todo }))\n      ));\n      this.filterTodos();\n    });\n  }\n\n  destroyTodo = (todoId) => {\n    const { todos } = this.state;\n    const destroyedTodo = todos.filter(todo => todo.id !== todoId);\n\n    localStorage.removeItem(`${todoId}`);\n\n    this.setState(() => ({ todos: destroyedTodo }), () => {\n      localStorage.clear();\n      this.state.todos.forEach((todo, i) => (\n        localStorage.setItem(`${i + 1}`, JSON.stringify({ ...todo }))\n      ));\n      if (!this.state.todos.length) {\n        this.setState(({ currentId: 1 }));\n      } else {\n        const lastItem = this.state.todos.length - 1;\n        const newCurrentId = this.state.todos[lastItem].id + 1;\n\n        this.setState(({ currentId: newCurrentId }));\n      }\n\n      this.filterTodos();\n    });\n  }\n\n  changePage = (changeTo) => {\n    this.setState(({ activeList: changeTo }));\n  }\n\n  filterTodos = () => {\n    this.setState(state => ({\n      activeTodo: state.todos.filter(todo => !todo.completed),\n      completedTodo: state.todos.filter(todo => todo.completed),\n    }), () => {\n      const { todos, completedTodo } = this.state;\n\n      todos.length === completedTodo.length\n        ? this.setState(() => ({ selectAll: true }))\n        : this.setState(() => ({ selectAll: false }));\n    });\n  }\n\n  clearCompletedTodo = () => {\n    const { todos } = this.state;\n    const clearCompleted = todos.filter(todo => !todo.completed);\n\n    this.setState(() => ({\n      todos: clearCompleted,\n      completedTodo: [],\n    }));\n  }\n\n  selectAllTodo = () => {\n    const { selectAll } = this.state;\n\n    this.setState(state => ({\n      todos: [...state.todos.map(todo => ({\n        ...todo,\n        completed: !selectAll,\n      }))],\n      selectAll: !state.selectAll,\n    }));\n\n    this.filterTodos();\n  }\n\n  changeTodoValue = (todoId, newValue) => {\n    const { todos } = this.state;\n\n    this.setState(() => ({\n      todos: todos.map(todo => ({\n        ...todo,\n        value: todo.id === todoId\n          ? newValue\n          : todo.value,\n      })),\n    }), () => {\n      localStorage.clear();\n      this.state.todos.forEach((todo, i) => (\n        localStorage.setItem(`${i + 1}`, JSON.stringify({ ...todo }))\n      ));\n    });\n  }\n\n  valueOfLocalStorage = () => {\n    const user = [];\n\n    for (let i = 1; i < localStorage.length + 1; i += 1) {\n      const localTodo = JSON.parse(localStorage.getItem(`${i}`));\n\n      if (localTodo) {\n        user.push(localTodo);\n      }\n    }\n\n    if (user.length) {\n      const currentTodos = user.map((todo, id) => ({\n        ...todo,\n        id: id + 1,\n      }));\n      const nextId = currentTodos[currentTodos.length - 1].id + 1;\n\n      this.setState(() => ({\n        todos: currentTodos, currentId: nextId,\n      }));\n      this.filterTodos();\n    }\n  }\n\n  render() {\n    const {\n      errorIncorrectlyInput, activeList, todos, selectAll, firstStart,\n    } = this.state;\n    const visibleList = this.choosePage(activeList);\n\n    if (firstStart) {\n      this.valueOfLocalStorage();\n      this.setState(({ firstStart: false }));\n    }\n\n    return (\n      <section className=\"todoapp\">\n        <Header />\n        <AddForm\n          validation={this.validation}\n          errorIncorrectlyInput={errorIncorrectlyInput}\n          todos={todos}\n          selectAllTodo={this.selectAllTodo}\n          selectAll={selectAll}\n        />\n        <ListTodos\n          list={visibleList}\n          changeStatusComplete={this.changeStatusComplete}\n          destroyTodo={this.destroyTodo}\n          changeTodoValue={this.changeTodoValue}\n        />\n          {this.state.todos.length >= 1\n            &&\n              <Footer\n                changePage={this.changePage}\n                todos={todos}\n                activeList={activeList}\n                clearCompletedTodo={this.clearCompletedTodo}\n              />\n\n          }\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}