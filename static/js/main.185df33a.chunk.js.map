{"version":3,"sources":["components/Header/Header.js","components/AddForm/AddForm.js","components/ListTodos/ListTodos.js","components/Footer/Footer.js","App.js","index.js"],"names":["Header","className","AddForm","state","newTodoValue","errorAddNewTodo","writeNewTodo","e","letter","target","value","replace","setState","length","submitTodo","validation","props","preventDefault","this","todos","selectAllTodo","selectAll","onSubmit","type","onClick","placeholder","onChange","React","Component","ListTodos","editingId","editValue","errorAddNewValue","editingValue","id","changeTodoValue","lostFocus","saveOrCancel","currentKey","key","list","changeStatusComplete","destroyTodo","map","todo","classValue","completed","onDoubleClick","checked","htmlFor","onKeyDown","onBlur","Footer","activeList","changePage","clearCompletedTodo","filter","views","href","PureComponent","App","activeTodo","completedTodo","currentId","firstStart","addTodo","newTodo","localStorage","setItem","JSON","stringify","choosePage","todoId","clear","forEach","i","filterTodos","destroyedTodo","removeItem","setTimeout","lastItem","newCurrentId","changeTo","clearCompleted","newValue","valueOfLocalStorage","user","localTodo","parse","getItem","push","currentTodos","nextId","startItem","errorIncorrectlyInput","visibleList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.185df33a.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => (\n  <header className=\"header\">\n    <h1>todos</h1>\n  </header>\n);\n\nexport default Header;\n","import React from 'react';\nimport PropTypes, { object } from 'prop-types';\n\nclass AddForm extends React.Component {\n  state = {\n    newTodoValue: '',\n    errorAddNewTodo: false,\n  }\n\n  writeNewTodo = (e) => {\n    const { errorAddNewTodo, newTodoValue } = this.state;\n    const letter = e.target.value.replace(/^ /, '');\n\n    this.setState({ newTodoValue: letter });\n\n    if (newTodoValue.length >= 2 && errorAddNewTodo) {\n      this.setState({ errorAddNewTodo: false });\n    }\n  }\n\n  submitTodo = (e) => {\n    const { validation } = this.props;\n    const { newTodoValue } = this.state;\n\n    e.preventDefault();\n    validation(newTodoValue);\n\n    if (newTodoValue.length >= 3) {\n      this.setState(() => ({\n        newTodoValue: '',\n      }));\n    } else {\n      this.setState({ errorAddNewTodo: true });\n    }\n  }\n\n  render() {\n    const { newTodoValue, errorAddNewTodo } = this.state;\n    const { todos, selectAllTodo, selectAll } = this.props;\n\n    return (\n      <>\n        <form\n          onSubmit={this.submitTodo}\n          className=\"formAddTodo\"\n        >\n          {todos.length >= 1\n            && (\n              <button\n                type=\"button\"\n                className={selectAll\n                  ? 'buttonSelectAll act'\n                  : 'buttonSelectAll dis'}\n                onClick={() => selectAllTodo()}\n              >\n                ‚ùØ\n              </button>\n            )\n          }\n          <input\n            className={errorAddNewTodo\n              ? 'new-todo new-todo__error'\n              : 'new-todo'}\n            placeholder=\"What needs to be done?\"\n            value={newTodoValue}\n            onChange={this.writeNewTodo}\n          />\n        </form>\n      </>\n    );\n  }\n}\n\nAddForm.propTypes = {\n  validation: PropTypes.func.isRequired,\n  todos: PropTypes.arrayOf(object).isRequired,\n  selectAllTodo: PropTypes.func.isRequired,\n  selectAll: PropTypes.bool.isRequired,\n};\n\nexport default AddForm;\n","import React from 'react';\nimport PropTypes, { object } from 'prop-types';\n\nclass ListTodos extends React.Component {\n  state = {\n    editingId: '',\n    editValue: '',\n    errorAddNewValue: false,\n  }\n\n  editingValue = (id, value) => {\n    this.setState(() => ({\n      editingId: id, editValue: value,\n    }));\n  }\n\n  changeTodoValue = (e) => {\n    const letter = e.target.value.replace(/^ /, '');\n\n    this.setState({ editValue: letter });\n  }\n\n  lostFocus = () => {\n    const { changeTodoValue } = this.props;\n\n    this.setState((state) => {\n      const editingId = '';\n      const editValue = '';\n      let errorAddNewValue = false;\n\n      if (state.editValue.length < 3) {\n        errorAddNewValue = true;\n\n        return {\n          errorAddNewValue,\n        };\n      }\n\n      changeTodoValue(state.editingId, state.editValue);\n\n      return {\n        errorAddNewValue,\n        editingId,\n        editValue,\n      };\n    });\n  }\n\n  saveOrCancel = (e) => {\n    const { changeTodoValue } = this.props;\n    const currentKey = e.key;\n\n    this.setState((state) => {\n      const errorAddNewValue = false;\n      const editingId = '';\n      const editValue = '';\n\n      if (currentKey === 'Enter' && state.editValue.length >= 3) {\n        changeTodoValue(state.editingId, state.editValue);\n\n        return {\n          editingId, editValue, errorAddNewValue: false,\n        };\n      }\n\n      if (currentKey === 'Enter' && state.editValue.length < 3) {\n        return {\n          errorAddNewValue: true,\n        };\n      }\n\n      if (currentKey === 'Escape') {\n        return {\n          editingId: '',\n          editValue: '',\n          errorAddNewValue,\n        };\n      }\n\n      if (state.editValue.length >= 3) {\n        return {\n          errorAddNewValue,\n        };\n      }\n    });\n  }\n\n  render() {\n    const { list, changeStatusComplete, destroyTodo } = this.props;\n    const { editingId, editValue, errorAddNewValue } = this.state;\n\n    return (\n      <ul className=\"todo-list\">\n        {list.map((todo) => {\n          let classValue;\n\n          if (editingId === todo.id) {\n            classValue = 'editing';\n          } else if (todo.completed) {\n            classValue = 'completed';\n          } else {\n            classValue = '';\n          }\n\n          return (\n            <li\n              onDoubleClick={() => this.editingValue(todo.id, todo.value)}\n              className={classValue}\n            >\n              <div className=\"view\" key={todo.id}>\n                <input\n                  type=\"checkbox\"\n                  className=\"toggle\"\n                  id={`todo-${todo.id}`}\n                  checked={todo.completed}\n                  onChange={() => changeStatusComplete(todo.id)}\n                />\n                <label htmlFor={`todo-${todo.id}`}>{todo.value}</label>\n                <button\n                  type=\"button\"\n                  className=\"destroy\"\n                  onClick={() => destroyTodo(todo.id)}\n                />\n              </div>\n              <input\n                type=\"text\"\n                className={errorAddNewValue ? 'edit new-todo__error' : 'edit'}\n                value={editValue}\n                onChange={this.changeTodoValue}\n                onKeyDown={this.saveOrCancel}\n                onBlur={this.lostFocus}\n              />\n            </li>\n          );\n        })}\n      </ul>\n    );\n  }\n}\n\nListTodos.propTypes = {\n  changeTodoValue: PropTypes.func.isRequired,\n  list: PropTypes.arrayOf(object).isRequired,\n  changeStatusComplete: PropTypes.func.isRequired,\n  destroyTodo: PropTypes.func.isRequired,\n};\n\nexport default ListTodos;\n","import React from 'react';\nimport PropTypes, { object } from 'prop-types';\n\nclass Footer extends React.PureComponent {\n  render() {\n    const { todos, activeList, changePage, clearCompletedTodo } = this.props;\n    const pageViews = ['all', 'active', 'completed'];\n\n    return (\n      <footer className=\"footer\">\n        <span className=\"todo-count\">\n          {todos.filter(todo => !todo.completed).length}\n          {' '}\n          items left\n        </span>\n\n        <ul className=\"filters\">\n          {pageViews.map(views => (\n            <li>\n              <a\n                href={`#/${views}`}\n                className={activeList === views ? 'selected' : ''}\n                onClick={() => changePage(views)}\n              >\n                {views}\n              </a>\n            </li>\n          ))}\n        </ul>\n\n        <button\n          type=\"button\"\n          className=\"clear-completed\"\n          onClick={() => clearCompletedTodo()}\n        >\n          Clear completed\n        </button>\n      </footer>\n    );\n  }\n}\n\nFooter.propTypes = {\n  todos: PropTypes.arrayOf(object).isRequired,\n  activeList: PropTypes.string.isRequired,\n  changePage: PropTypes.func.isRequired,\n  clearCompletedTodo: PropTypes.func.isRequired,\n};\n\nexport default Footer;\n","import React from 'react';\n\nimport Header from './components/Header/Header';\nimport AddForm from './components/AddForm/AddForm';\nimport ListTodos from './components/ListTodos/ListTodos';\nimport Footer from './components/Footer/Footer';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    activeTodo: [],\n    completedTodo: [],\n    activeList: 'all',\n    currentId: 1,\n    selectAll: false,\n    firstStart: true,\n  }\n\n  componentDidMount() {\n    localStorage.setItem(`${0}`, JSON.stringify({ startItem: 'startItem' }));\n  }\n\n  validation = (newTodoValue) => {\n    if (newTodoValue.length >= 3) {\n      this.addTodo(newTodoValue);\n    }\n  }\n\n  addTodo = (newTodoValue) => {\n    const { currentId } = this.state;\n    const newTodo = {};\n\n    newTodo.value = newTodoValue;\n    newTodo.id = currentId;\n    newTodo.completed = false;\n    localStorage.setItem(`${currentId}`, JSON.stringify({ ...newTodo }));\n\n    this.setState(state => ({\n      todos: [...state.todos, newTodo],\n      activeTodo: [...state.activeTodo, newTodo],\n      currentId: state.currentId + 1,\n      selectAll: false,\n    }));\n  }\n\n  choosePage = (list) => {\n    const { todos, activeTodo, completedTodo } = this.state;\n\n    switch (list) {\n      case 'all':\n        return todos;\n\n      case 'active':\n        return activeTodo;\n\n      case 'completed':\n        return completedTodo;\n\n      default:\n        return todos;\n    }\n  }\n\n  changeStatusComplete = (todoId) => {\n    this.setState(state => ({\n      todos: state.todos.map(todo => ({\n        ...todo,\n        completed: todo.id === todoId\n          ? !todo.completed\n          : todo.completed,\n      })),\n    }), () => {\n      localStorage.clear();\n      this.state.todos.forEach((todo, i) => (\n        localStorage.setItem(`${i + 1}`, JSON.stringify({ ...todo }))\n      ));\n      this.filterTodos();\n    });\n  }\n\n  destroyTodo = (todoId) => {\n    const { todos } = this.state;\n    const destroyedTodo = todos.filter(todo => todo.id !== todoId);\n\n    localStorage.removeItem(`${todoId}`);\n\n    this.setState(() => ({ todos: destroyedTodo }));\n\n    setTimeout(() => {\n      localStorage.clear();\n      this.state.todos.forEach((todo, i) => (\n        localStorage.setItem(`${i + 1}`, JSON.stringify({ ...todo }))\n      ));\n      if (!this.state.todos.length) {\n        this.setState(({ currentId: 1 }));\n      } else {\n        const lastItem = this.state.todos.length - 1;\n        const newCurrentId = this.state.todos[lastItem].id + 1;\n\n        this.setState(({ currentId: newCurrentId }));\n      }\n\n      this.filterTodos();\n    }, 0);\n  }\n\n  changePage = (changeTo) => {\n    this.setState(({ activeList: changeTo }));\n  }\n\n  filterTodos = () => {\n    this.setState(state => ({\n      activeTodo: state.todos.filter(todo => !todo.completed),\n      completedTodo: state.todos.filter(todo => todo.completed),\n    }), () => {\n      const { todos, completedTodo } = this.state;\n\n      todos.length === completedTodo.length\n        ? this.setState(() => ({ selectAll: true }))\n        : this.setState(() => ({ selectAll: false }));\n    });\n  }\n\n  clearCompletedTodo = () => {\n    const { todos } = this.state;\n    const clearCompleted = todos.filter(todo => !todo.completed);\n\n    this.setState(() => ({\n      todos: clearCompleted,\n      completedTodo: [],\n    }));\n  }\n\n  selectAllTodo = () => {\n    const { selectAll } = this.state;\n\n    this.setState(state => ({\n      todos: [...state.todos.map(todo => ({\n        ...todo,\n        completed: !selectAll,\n      }))],\n      selectAll: !state.selectAll,\n    }));\n\n    this.filterTodos();\n  }\n\n  changeTodoValue = (todoId, newValue) => {\n    const { todos } = this.state;\n\n    this.setState(() => ({\n      todos: todos.map(todo => ({\n        ...todo,\n        value: todo.id === todoId\n          ? newValue\n          : todo.value,\n      })),\n    }), () => {\n      localStorage.clear();\n      this.state.todos.forEach((todo, i) => (\n        localStorage.setItem(`${i + 1}`, JSON.stringify({ ...todo }))\n      ));\n    });\n  }\n\n  valueOfLocalStorage = () => {\n    const user = [];\n\n    for (let i = 1; i < localStorage.length + 1; i += 1) {\n      const localTodo = JSON.parse(localStorage.getItem(`${i}`));\n\n      if (localTodo) {\n        user.push(localTodo);\n      }\n    }\n\n    if (user.length) {\n      const currentTodos = user.map((todo, id) => ({\n        ...todo,\n        id: id + 1,\n      }));\n      const nextId = currentTodos[currentTodos.length - 1].id + 1;\n\n      this.setState(() => ({\n        todos: currentTodos, currentId: nextId,\n      }));\n      this.filterTodos();\n    }\n  }\n\n  render() {\n    const {\n      errorIncorrectlyInput, activeList, todos, selectAll, firstStart,\n    } = this.state;\n    const visibleList = this.choosePage(activeList);\n\n    // localStorage.clear()\n    if (firstStart) {\n      this.valueOfLocalStorage();\n      this.setState(({ firstStart: false }));\n    }\n\n    return (\n      <section className=\"todoapp\">\n        <Header />\n        <AddForm\n          validation={this.validation}\n          errorIncorrectlyInput={errorIncorrectlyInput}\n          todos={todos}\n          selectAllTodo={this.selectAllTodo}\n          selectAll={selectAll}\n        />\n        <ListTodos\n          list={visibleList}\n          changeStatusComplete={this.changeStatusComplete}\n          destroyTodo={this.destroyTodo}\n          changeTodoValue={this.changeTodoValue}\n        />\n        {this.state.todos.length >= 1\n          && (\n            <Footer\n              changePage={this.changePage}\n              todos={todos}\n              activeList={activeList}\n              clearCompletedTodo={this.clearCompletedTodo}\n            />\n          )\n\n        }\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}